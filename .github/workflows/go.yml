name: BuildAll

on:
  workflow_dispatch:
    inputs:
      platform_win:
            description: 'Platform-Windows'
            required: true
            default: 'true'
      platform_linux:
            description: 'Platform-Linux'
            required: true
            default: 'false'
      run_tests:
            description: 'Run tests'
            required: true
            default: 'false'
      x86_version:
            description: '32bits version'
            required: true
            default: 'false'
  push:
    branches: [ "main", "testing-*", "issue-10" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-linux:
    if: ${{ github.event.inputs.platform_linux == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16
        
    - name: Build x64
      run: |
        set GOARCH=amd64
        set GOOS=linux
        set CGO_ENABLED=1
        go clean -cache
        go build -v ./...
      
    - if: ${{ github.event.inputs.run_tests == 'true' }}
      name: Test
      run: go test -v ./...
      
    - uses: actions/upload-artifact@v3
      with:
        name: QPep-Linux-${{ github.run_id }}
        path: qpep

  build-windows:
    if: ${{ github.event.inputs.platform_win == 'true' }}
    runs-on: windows-latest
    defaults:
      run: 
        shell: cmd
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.16
        
    - if: ${{ github.event.inputs.run_tests == 'true' }}
      name: Test
      run: go test -v ./...
      continue-on-error: true
      
    - uses: actions/checkout@v2
    - name: Install Wix
      uses: actions/checkout@v2
      with:
        repository: fbarresi/wix
        path: wix

    - name: Install MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Prepare
      run: |
           MKDIR build
           MKDIR build\x64
           MKDIR build\x86
           COPY /Y windivert\LICENSE build\LICENSE.windivert
           COPY /Y LICENSE build\LICENSE
           set GOARCH=amd64
           go clean -cache
           set GOARCH=386
           go clean -cache
           COPY /Y windivert\x64\* build\x64
           
    - name: Build QPep x64
      run: |
           set GOARCH=amd64
           set CGO_ENABLED=1
           go build -o build\x64\qpep.exe
           
    - name: Build QPep Tray x64
      run: |
           pushd qpep-tray
           set GOARCH=amd64
           set GOOS=windows
           set CGO_ENABLED=0
           go build -ldflags -H=windowsgui -o ..\build\x86\qpep-tray.exe
           popd
           
    - if: ${{ github.event.inputs.x86_version == 'true' }}
      name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
      with:
        platform: x86
        
    - if: ${{ github.event.inputs.x86_version == 'true' }}
      name: Build QPep x86
      run: |
           set GOARCH=386
           set GOOS=windows
           set CGO_ENABLED=1
           go build -o build\x64\qpep.exe
           
    - if: ${{ github.event.inputs.x86_version == 'true' }}
      name: Build QPep Tray x86
      run: |
           pushd qpep-tray
           set GOARCH=386
           set GOOS=windows
           set CGO_ENABLED=0
           go build -ldflags -H=windowsgui -o ..\build\x86\qpep-tray.exe
           popd
      
    - name: Build QPep Installer
      run: |
           set PATH=${{ github.workspace }}\wix\tools;%PATH%
           msbuild installer\installer.sln
   
    - uses: actions/upload-artifact@v3
      with:
        name: QPep-Windows-${{ github.run_id }}
        path: build\installer.msi
