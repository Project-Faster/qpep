name: Performance Common (Build)

on:
  workflow_call:

jobs:
  build-client:
    runs-on: vm-client
    env:
      GO_VERSION: 1.20.14
      CMAKE_VERSION: '3.22.x'
      GH_TOKEN: ${{ github.token }}
      CACHE_KEY: qpep_client-${{ github.head_ref || github.ref_name }}-${{ github.sha }}
      CMAKE_BUILD_PARALLEL_LEVEL: 8
    steps:
      - name: Install the github cli
        uses: sersoft-gmbh/setup-gh-cli-action@v2
        with:
          version:
            stable

      - name: Restore cached build
        id: cache-build
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build
          key: ${{ env.CACHE_KEY }}

      - name: Cleanup previous cached build
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        continue-on-error: true
        shell: pwsh
        run: |
          $ARTID = @(gh cache list --repo project-faster/qpep --json id,key -q '.[]|select(.key | startswith("qpep_client-"))|.id' )
          write-host "removing cache # $ARTID"
          gh cache delete  --repo project-faster/qpep $ARTID

      - name: Cleanup workspace
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: |
          rm ${{ github.workspace }}\* -r -force

      - uses: actions/checkout@v4
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        with:
          clean: true
          submodules: true

      - name: Set up Go
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up CMake
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: ${{ env.CMAKE_VERSION }}

      - name: Prepare
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        shell: pwsh
        run: |
          New-Item -Path . -Name "build" -ItemType "directory" -Force | Out-Null
          New-Item -Path . -Name "build/config" -ItemType "directory" -Force | Out-Null
          Copy-Item "./docker/client-env/*.pem" "./build"
          Copy-Item "./windivert/x64/*" -Destination "./build"

      - name: Build Client (Backends)
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        shell: cmd
        run: |
          set CGO_ENABLED=1
          set GOOS=windows
          set GOHOSTARCH=amd64
          set GOHOSTOS=windows
          cd backend/
          go generate

      - name: Build Client
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        shell: cmd
        run: |
          set CGO_ENABLED=1
          set GOOS=windows
          set GOHOSTARCH=amd64
          set GOHOSTOS=windows
          go build -v -o build/qpep.exe

      - name: Cache build
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/build
          key: ${{ env.CACHE_KEY }}

      - name: Auto-cancel workflow on error
        if: failure()
        uses: andymckay/cancel-action@0.4

  build-server:
    runs-on: vm-server
    env:
      GO_VERSION: 1.20.14
      CMAKE_VERSION: '3.22.x'
      GH_TOKEN: ${{ github.token }}
      CACHE_KEY: qpep_server-${{ github.head_ref || github.ref_name }}-${{ github.sha }}
      CMAKE_BUILD_PARALLEL_LEVEL: 8
    steps:
      - name: Pre-Cleanup
        run: |
          # stop docker randomly disrupting container network
          sudo systemctl restart docker || true
          # cleanup previous results if any
          sudo rm -rf build/* || true
          sudo rm -rf docker/server-data-env/output/* || true

      - name: Install the github cli
        uses: sersoft-gmbh/setup-gh-cli-action@v2
        with:
          version:
            stable

      - name: Restore cached build
        id: cache-build
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build
          key: ${{ env.CACHE_KEY }}

      - name: Cleanup previous cached build
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: |
          ARTID=$(gh cache list --repo project-faster/qpep --json id,key -q '.[]|select(.key | startswith("qpep_server-"))|.id' )
          echo "removing cache # $ARTID"
          gh cache delete  --repo project-faster/qpep "$ARTID"

      - uses: actions/checkout@v4
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        with:
          clean: true
          submodules: true

      - name: Set up Go
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up CMake
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: ${{ env.CMAKE_VERSION }}

      - name: Build server (Init submodules)
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        run: |
          git submodule init
          git submodule update

      - name: Build server (Backends)
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        run: |
          cd backend
          go env
          go generate

      - name: Build server
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p build
          mkdir -p build/config
          go build -v -o build/qpep
          rm -rf backends/quicly-go/gen_*
          cp ./docker/server-env/server/*.pem ./build

      - name: Cache build
        if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/build
          key: ${{ env.CACHE_KEY }}

      - name: Cleanup all docker
        run: |
          docker version
          PERC=$(df -l -h / | tail -n1 | cut -d ' ' --fields=16 | sed -s 's/%//')
          if [[ $PERC -gt 90 ]]; then
            echo "Pruning cached docker data"
            docker system prune -af || true
          fi

      - name: Build Data Server
        run: |
          cd docker/server-data-env/
          docker compose build

      - name: Auto-cancel workflow on error
        if: failure()
        uses: andymckay/cancel-action@0.4
