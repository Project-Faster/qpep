name: PerformanceTests

on:
  workflow_dispatch:
    inputs:
      connection_delay_ms:
        description: 'connection delay in milliseconds set on the server'
        type: integer
        default: 0
        required: true
      connection_delay_device:
        description: 'serverside network device to set delay on'
        type: string
        default: enp0s3
        required: true
      server_public_address:
        description: 'address for the server'
        type: string
        default: 35.163.142.7
        required: true
      client_listen_address:
        description: 'address for the client to listen on'
        type: string
        default: 192.168.1.21
        required: true

run-name: Performance Testing - ${{ inputs.server_public_address }}/${{ inputs.connection_delay_ms }}ms delay

jobs:
  run-client:
    runs-on: vm-client
    env:
      REMOTE_GATEWAY: ${{ inputs.server_public_address }}
      LISTEN_ADDRESS: ${{ inputs.client_listen_address }}
    strategy:
      matrix:
        download_size: [ 10 ]
        connections_number: [ 4 ]
#        download_size: [ 1, 10, 100 ]
#        connections_number: [ 1, 4, 8, 16 ]
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true

#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.18.10
#
      - name: Prepare
        shell: powershell
        run: |
          New-Item -Path . -Name "build" -ItemType "directory" -Force
          New-Item -Path . -Name "build/config" -ItemType "directory" -Force
          $config = Get-Content -Path ./docker/client-env/qpep.yml.tpl
          $config = $config.replace('<QPEP_GATEWAY>',$env:REMOTE_GATEWAY)
          $config = $config.replace('<QPEP_ADDRESS>',$env:LISTEN_ADDRESS)
          $config > ./build/config/qpep.yml
          Copy-Item "./windivert/x64/*" -Destination "./build"

      - name: Build Client
        shell: cmd
        run: |
          set CGO_ENABLED=1
          set GOOS=windows
          set GOHOSTARCH=amd64
          set GOHOSTOS=windows
          go build -v -o build/qpep.exe

      - name: Run Client
        shell: cmd
        run: |
          cd build/
          cmd /c "START /b qpep.exe -c"

      - name: Wait Server
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "http://${REMOTE_GATEWAY}:444/api/v1/client/echo" -UseBasicParsing -TimeoutSec 1 -MaximumRetryCount 60

      - name: Run Tests
        shell: cmd
        run: |
          cd docker/speedtests/
          cmd /c "go test speed_test.go -target_url http://${REMOTE_GATEWAY}/target_${{ matrix.download_size }}M.dat -connections_num ${{ matrix.connections_number }} -test.timeout 1m > out.log"
          type out.log

      - name: Stop Client
        if: always()
        shell: powershell
        run: |
          Get-Process qpep | Stop-Process

      - name: Reset Proxy
        if: always()
        run: |
          go run docker/speedtests/utils/reset_proxy_util.go

  run-server:
    runs-on: vm-server
    env:
      SERVER_PUBLIC_ADDRESS: ${{ inputs.server_public_address }}
      LISTEN_ADDRESS: 127.0.0.1
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.10

      - name: Set connection delay
        run: |
          sudo tc qdisc replace dev ${{ inputs.connection_delay_device }} root handle 1: netem delay ${{ inputs.connection_delay_ms }}ms

      - name: Build Server
        run: |
          docker version
          cd docker/
          pushd build-linux/
          docker build -t project-faster/qpep_server .

      - name: Run data server
        run: |
          cd docker/server-data-env/
          pushd http-data/
          bash gen-local-data.sh
          popd
          docker compose up -d

      - name: Run Server
        run: |
          cd docker/server-env/
          docker compose up -d

      - name: Wait Tests
        run: |
          sleep 60

      - name: Stop Server Container
        if: always()
        run: |
          cd docker/server-env/
          docker compose down -v

      - name: Stop Data Server Container
        if: always()
        run: |
          cd docker/server-data-env/
          docker compose down -v

      - name: Cleanup
        if: always()
        run: |
          sudo tc qdisc replace dev ${{ inputs.connection_delay_device }} root handle 1: netem delay 0ms || true
          docker image rm project-faster/qpep_server || true

#  check:
#    needs: [ stop-data-server, run-client, run-server ]
#    runs-on: vm-server
#    steps:
#      - name: Final Check
#        run: |
#          echo Check Results!
#          sleep 2
